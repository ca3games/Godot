[gd_resource type="VisualShader" load_steps=11 format=2]

[ext_resource path="res://2D/Background/Level1/ocean.jpg" type="Texture" id=1]

[sub_resource type="VisualShaderNodeScalarOp" id=1]


[sub_resource type="VisualShaderNodeVectorCompose" id=2]


[sub_resource type="VisualShaderNodeTexture" id=3]

texture = ExtResource( 1 )

[sub_resource type="VisualShaderNodeInput" id=4]

input_name = "uv"

[sub_resource type="VisualShaderNodeScalarConstant" id=5]

constant = 0.9

[sub_resource type="VisualShaderNodeInput" id=6]

input_name = "time"

[sub_resource type="VisualShaderNodeScalarOp" id=7]

operator = 2

[sub_resource type="VisualShaderNodeScalarConstant" id=8]

constant = 0.005

[sub_resource type="VisualShaderNodeVectorDecompose" id=9]


[resource]

code = "shader_type spatial;
render_mode unshaded;

uniform sampler2D tex_frg_2;


void vertex() {
// Salida:0

}

void fragment() {
// Entrada:6
	float n_out6p0;
	n_out6p0 = TIME;

// Scalar:8
	float n_out8p0;
	n_out8p0 = 0.005000;

// ScalarOp:7
	float n_out7p0;
	n_out7p0 = n_out6p0 * n_out8p0;

// Entrada:3
	vec3 n_out3p0;
	n_out3p0 = vec3(UV,0.0);

// VectorDecompose:9
	float n_out9p0;
	float n_out9p1;
	float n_out9p2;
	n_out9p0 = n_out3p0.x;
	n_out9p1 = n_out3p0.y;
	n_out9p2 = n_out3p0.z;

// ScalarOp:10
	float n_out10p0;
	n_out10p0 = n_out7p0 + n_out9p0;

// VectorCompose:11
	vec3 n_out11p0;
	n_out11p0 = vec3( n_out10p0 , n_out9p1 , n_out9p2 );

// Texture:2
	vec3 n_out2p0;
	float n_out2p1;
	vec4 tex_frg_2_read = texture( tex_frg_2 , n_out11p0.xy );
	n_out2p0 = tex_frg_2_read.rgb;
	n_out2p1 = tex_frg_2_read.a;

// Scalar:5
	float n_out5p0;
	n_out5p0 = 0.900000;

// Salida:0
	ALBEDO = n_out2p0;
	ALPHA = n_out5p0;

}

void light() {
// Salida:0

}
"
graph_offset = Vector2( -206, 46 )
flags/unshaded = true
nodes/fragment/0/position = Vector2( 400, 180 )
nodes/fragment/2/node = SubResource( 3 )
nodes/fragment/2/position = Vector2( 360, -40 )
nodes/fragment/3/node = SubResource( 4 )
nodes/fragment/3/position = Vector2( -520, 160 )
nodes/fragment/5/node = SubResource( 5 )
nodes/fragment/5/position = Vector2( 160, 360 )
nodes/fragment/6/node = SubResource( 6 )
nodes/fragment/6/position = Vector2( -340, -40 )
nodes/fragment/7/node = SubResource( 7 )
nodes/fragment/7/position = Vector2( -180, 40 )
nodes/fragment/8/node = SubResource( 8 )
nodes/fragment/8/position = Vector2( -380, 40 )
nodes/fragment/9/node = SubResource( 9 )
nodes/fragment/9/position = Vector2( -320, 160 )
nodes/fragment/10/node = SubResource( 1 )
nodes/fragment/10/position = Vector2( -80, 160 )
nodes/fragment/11/node = SubResource( 2 )
nodes/fragment/11/position = Vector2( 140, 140 )
nodes/fragment/connections = PoolIntArray( 2, 0, 0, 0, 5, 0, 0, 1, 6, 0, 7, 0, 8, 0, 7, 1, 3, 0, 9, 0, 7, 0, 10, 0, 9, 0, 10, 1, 10, 0, 11, 0, 9, 1, 11, 1, 9, 2, 11, 2, 11, 0, 2, 0 )

